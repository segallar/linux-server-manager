#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ —Å—Ç—Ä–∞–Ω–∏—Ü

echo "‚ö° –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ Linux Server Manager"
echo "=================================================="

# –ë–∞–∑–æ–≤—ã–π URL
BASE_URL="http://sirocco.romansegalla.online:81"

# –°–ø–∏—Å–æ–∫ —Å—Ç—Ä–∞–Ω–∏—Ü –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
PAGES=(
    "/"
    "/system"
    "/processes"
    "/services"
    "/packages"
    "/network/ssh"
    "/network/port-forwarding"
    "/network/wireguard"
    "/network/cloudflare"
    "/network/routing"
)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∏–∑–º–µ—Ä–µ–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏ –∑–∞–≥—Ä—É–∑–∫–∏
measure_load_time() {
    local url="$1"
    local page_name="$2"
    
    echo -n "–¢–µ—Å—Ç–∏—Ä—É—é $page_name... "
    
    # –ò–∑–º–µ—Ä—è–µ–º –≤—Ä–µ–º—è –∑–∞–≥—Ä—É–∑–∫–∏
    start_time=$(date +%s.%N)
    http_code=$(curl -s -o /dev/null -w "%{http_code}" "$url")
    end_time=$(date +%s.%N)
    
    # –í—ã—á–∏—Å–ª—è–µ–º –≤—Ä–µ–º—è –≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö
    load_time=$(echo "scale=3; ($end_time - $start_time) * 1000" | bc)
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å—Ç–∞—Ç—É—Å
    if [ "$http_code" = "200" ]; then
        status="‚úÖ"
    else
        status="‚ùå"
    fi
    
    # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –≤—Ä–µ–º—è
    if (( $(echo "$load_time < 1000" | bc -l) )); then
        formatted_time="${load_time} ms"
    else
        formatted_time="$(echo "scale=1; $load_time / 1000" | bc) s"
    fi
    
    echo "$status $formatted_time (HTTP $http_code)"
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    echo "$page_name|$load_time|$http_code|$status" >> /tmp/performance_results.txt
}

# –û—á–∏—â–∞–µ–º —Ñ–∞–π–ª —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
> /tmp/performance_results.txt

echo "–ù–∞—á–∏–Ω–∞—é —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ..."
echo ""

# –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–∞–∂–¥—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
for page in "${PAGES[@]}"; do
    page_name=$(echo "$page" | sed 's|^/||' | sed 's|/| ‚Üí |g')
    if [ "$page_name" = "" ]; then
        page_name="–ì–ª–∞–≤–Ω–∞—è"
    fi
    
    measure_load_time "$BASE_URL$page" "$page_name"
done

echo ""
echo "üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:"
echo "=========================="

# –°–æ—Ä—Ç–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ –≤—Ä–µ–º–µ–Ω–∏ –∑–∞–≥—Ä—É–∑–∫–∏
sort -t'|' -k2 -n /tmp/performance_results.txt | while IFS='|' read -r page time code status; do
    if (( $(echo "$time < 1000" | bc -l) )); then
        formatted_time="${time} ms"
        performance="üü¢ –ë—ã—Å—Ç—Ä–æ"
    elif (( $(echo "$time < 3000" | bc -l) )); then
        formatted_time="${time} ms"
        performance="üü° –°—Ä–µ–¥–Ω–µ"
    else
        formatted_time="$(echo "scale=1; $time / 1000" | bc) s"
        performance="üî¥ –ú–µ–¥–ª–µ–Ω–Ω–æ"
    fi
    
    printf "%-25s | %-10s | %s\n" "$page" "$formatted_time" "$performance"
done

echo ""
echo "üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:"
echo "=============="

# –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
total_pages=$(wc -l < /tmp/performance_results.txt)
fast_pages=$(grep -c "üü¢" /tmp/performance_results.txt 2>/dev/null || echo "0")
medium_pages=$(grep -c "üü°" /tmp/performance_results.txt 2>/dev/null || echo "0")
slow_pages=$(grep -c "üî¥" /tmp/performance_results.txt 2>/dev/null || echo "0")

echo "–í—Å–µ–≥–æ —Å—Ç—Ä–∞–Ω–∏—Ü: $total_pages"
echo "–ë—ã—Å—Ç—Ä—ã–µ (< 1s): $fast_pages"
echo "–°—Ä–µ–¥–Ω–∏–µ (1-3s): $medium_pages"
echo "–ú–µ–¥–ª–µ–Ω–Ω—ã–µ (> 3s): $slow_pages"

# –í—ã—á–∏—Å–ª—è–µ–º —Å—Ä–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è
avg_time=$(awk -F'|' '{sum+=$2} END {print sum/NR}' /tmp/performance_results.txt 2>/dev/null || echo "0")
if (( $(echo "$avg_time < 1000" | bc -l) )); then
    avg_formatted="${avg_time} ms"
else
    avg_formatted="$(echo "scale=1; $avg_time / 1000" | bc) s"
fi

echo "–°—Ä–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è: $avg_formatted"

# –û—á–∏—â–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
rm -f /tmp/performance_results.txt

echo ""
echo "üéØ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:"
echo "================"

if [ "$slow_pages" -gt 0 ]; then
    echo "‚ö†Ô∏è  –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –º–µ–¥–ª–µ–Ω–Ω—ã–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã. –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è."
fi

if [ "$fast_pages" -eq "$total_pages" ]; then
    echo "‚úÖ –í—Å–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∑–∞–≥—Ä—É–∂–∞—é—Ç—Å—è –±—ã—Å—Ç—Ä–æ!"
fi

echo "üí° –î–ª—è –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞ –≤ –±—Ä–∞—É–∑–µ—Ä–µ."
