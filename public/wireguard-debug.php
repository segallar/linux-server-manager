<?php
// –í–∫–ª—é—á–∞–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –æ—à–∏–±–æ–∫
ini_set('display_errors', 1);
ini_set('display_startup_errors', 1);
error_reporting(E_ALL);

echo "<!DOCTYPE html>
<html>
<head>
    <title>WireGuard Debug</title>
    <style>
        body { font-family: Arial, sans-serif; margin: 20px; }
        .success { color: green; font-weight: bold; }
        .error { color: red; font-weight: bold; }
        .warning { color: orange; font-weight: bold; }
        pre { background: #f5f5f5; padding: 10px; border-radius: 5px; overflow-x: auto; }
        .section { margin: 20px 0; padding: 15px; border: 1px solid #ddd; border-radius: 5px; }
    </style>
</head>
<body>
    <h1>üîß WireGuard Debug Information</h1>";

// –ü—Ä–æ–≤–µ—Ä–∫–∞ 1: –°—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤ WireGuard
echo "<div class='section'>
    <h2>1. –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ WireGuard</h2>";

$wgPath = '/usr/bin/wg';
$wgQuickPath = '/usr/bin/wg-quick';

echo "<p><strong>wg:</strong> <span class='" . (file_exists($wgPath) ? 'success' : 'error') . "'>";
echo file_exists($wgPath) ? '–ù–ê–ô–î–ï–ù' : '–ù–ï –ù–ê–ô–î–ï–ù';
echo "</span></p>";

echo "<p><strong>wg-quick:</strong> <span class='" . (file_exists($wgQuickPath) ? 'success' : 'error') . "'>";
echo file_exists($wgQuickPath) ? '–ù–ê–ô–î–ï–ù' : '–ù–ï –ù–ê–ô–î–ï–ù';
echo "</span></p>";

if (!file_exists($wgPath) || !file_exists($wgQuickPath)) {
    echo "<p class='warning'>WireGuard –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∫–æ–º–∞–Ω–¥–æ–π:</p>";
    echo "<pre>sudo apt update && sudo apt install wireguard</pre>";
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ 2: –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥
echo "</div><div class='section'>
    <h2>2. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–º–∞–Ω–¥ WireGuard</h2>";

echo "<h3>wg show interfaces:</h3>";
$output = shell_exec('/usr/bin/wg show interfaces 2>&1');
echo "<pre>" . htmlspecialchars($output ?: '–ù–µ—Ç –≤—ã–≤–æ–¥–∞') . "</pre>";

echo "<h3>ip link show | grep wg:</h3>";
$output = shell_exec('ip link show | grep wg 2>&1');
echo "<pre>" . htmlspecialchars($output ?: '–ù–µ—Ç –≤—ã–≤–æ–¥–∞') . "</pre>";

echo "<h3>wg show:</h3>";
$output = shell_exec('/usr/bin/wg show 2>&1');
echo "<pre>" . htmlspecialchars($output ?: '–ù–µ—Ç –≤—ã–≤–æ–¥–∞') . "</pre>";

echo "<h3>wg show wg0:</h3>";
$output = shell_exec('/usr/bin/wg show wg0 2>&1');
echo "<pre>" . htmlspecialchars($output ?: '–ù–µ—Ç –≤—ã–≤–æ–¥–∞') . "</pre>";

// –ü—Ä–æ–≤–µ—Ä–∫–∞ 3: –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
echo "</div><div class='section'>
    <h2>3. –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã</h2>";

$configDir = '/etc/wireguard/';
if (is_dir($configDir)) {
    $files = @scandir($configDir);
    echo "<p><strong>–ü–∞–ø–∫–∞:</strong> $configDir</p>";
    echo "<p><strong>–§–∞–π–ª—ã:</strong></p>";
    
    if ($files === false) {
        echo "<p class='warning'>–ù–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ –ø–∞–ø–∫–µ (—Ç—Ä–µ–±—É—é—Ç—Å—è –ø—Ä–∞–≤–∞ root)</p>";
        echo "<p>–ü—Ä–æ–≤–µ—Ä–∏–º —á–µ—Ä–µ–∑ –∫–æ–º–∞–Ω–¥—É:</p>";
        $output = shell_exec('sudo ls -la /etc/wireguard/ 2>&1');
        echo "<pre>" . htmlspecialchars($output ?: '–ù–µ—Ç –≤—ã–≤–æ–¥–∞') . "</pre>";
    } elseif (count($files) <= 2) {
        echo "<p class='warning'>–ü–∞–ø–∫–∞ –ø—É—Å—Ç–∞—è</p>";
    } else {
        echo "<ul>";
        foreach ($files as $file) {
            if ($file !== '.' && $file !== '..') {
                $fullPath = $configDir . $file;
                $size = @filesize($fullPath);
                echo "<li>$file ($size –±–∞–π—Ç)</li>";
            }
        }
        echo "</ul>";
    }
} else {
    echo "<p class='error'>–ü–∞–ø–∫–∞ $configDir –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç</p>";
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ 4: –ü—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞
echo "</div><div class='section'>
    <h2>4. –ü—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞</h2>";

echo "<p><strong>–¢–µ–∫—É—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:</strong> " . shell_exec('whoami') . "</p>";
echo "<p><strong>wg –∏—Å–ø–æ–ª–Ω—è–µ–º—ã–π:</strong> " . (is_executable($wgPath) ? '–î–ê' : '–ù–ï–¢') . "</p>";
echo "<p><strong>wg-quick –∏—Å–ø–æ–ª–Ω—è–µ–º—ã–π:</strong> " . (is_executable($wgQuickPath) ? '–î–ê' : '–ù–ï–¢') . "</p>";

// –ü—Ä–æ–≤–µ—Ä–∫–∞ 5: –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤
echo "</div><div class='section'>
    <h2>5. –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤</h2>";

echo "<h3>systemctl status wg-quick@wg0:</h3>";
$output = shell_exec('systemctl status wg-quick@wg0 2>&1');
echo "<pre>" . htmlspecialchars($output ?: '–ù–µ—Ç –≤—ã–≤–æ–¥–∞') . "</pre>";

// –ü—Ä–æ–≤–µ—Ä–∫–∞ 6: –¢–µ—Å—Ç –Ω–∞—à–µ–≥–æ —Å–µ—Ä–≤–∏—Å–∞
echo "</div><div class='section'>
    <h2>6. –¢–µ—Å—Ç PHP —Å–µ—Ä–≤–∏—Å–∞</h2>";

try {
    // –ü–æ–¥–∫–ª—é—á–∞–µ–º –∞–≤—Ç–æ–∑–∞–≥—Ä—É–∑—á–∏–∫
    require_once __DIR__ . '/../vendor/autoload.php';
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–ª–∞—Å—Å —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    if (class_exists('App\Services\WireGuardService')) {
        echo "<p class='success'>–ö–ª–∞—Å—Å WireGuardService –Ω–∞–π–¥–µ–Ω</p>";
        
        $service = new App\Services\WireGuardService();
        
        echo "<p><strong>isInstalled():</strong> " . ($service->isInstalled() ? '–î–ê' : '–ù–ï–¢') . "</p>";
        
        $interfaces = $service->getInterfaces();
        echo "<p><strong>getInterfaces():</strong> " . count($interfaces) . " –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤</p>";
        
        if (!empty($interfaces)) {
            echo "<h3>–î–µ—Ç–∞–ª–∏ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤:</h3>";
            foreach ($interfaces as $interface) {
                echo "<div style='border: 1px solid #ccc; margin: 10px 0; padding: 10px;'>";
                echo "<h4>" . htmlspecialchars($interface['name']) . "</h4>";
                echo "<p><strong>–°—Ç–∞—Ç—É—Å:</strong> " . htmlspecialchars($interface['status']) . "</p>";
                echo "<p><strong>–ê–¥—Ä–µ—Å:</strong> " . htmlspecialchars($interface['address']) . "</p>";
                echo "<p><strong>–ü–æ—Ä—Ç:</strong> " . htmlspecialchars($interface['port']) . "</p>";
                echo "<p><strong>–ü–∏—Ä–æ–≤:</strong> " . count($interface['peers']) . "</p>";
                echo "</div>";
            }
        }
        
        $stats = $service->getStats();
        echo "<h3>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:</h3>";
        echo "<pre>" . print_r($stats, true) . "</pre>";
        
    } else {
        echo "<p class='error'>–ö–ª–∞—Å—Å WireGuardService –Ω–µ –Ω–∞–π–¥–µ–Ω</p>";
    }
    
} catch (Exception $e) {
    echo "<p class='error'>–û—à–∏–±–∫–∞: " . htmlspecialchars($e->getMessage()) . "</p>";
    echo "<pre>" . htmlspecialchars($e->getTraceAsString()) . "</pre>";
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ 7: –õ–æ–≥–∏ PHP
echo "</div><div class='section'>
    <h2>7. –ü–æ—Å–ª–µ–¥–Ω–∏–µ –ª–æ–≥–∏ PHP</h2>";

$logFiles = [
    '/var/log/php8.1-fpm.log',
    '/var/log/php8.0-fpm.log',
    '/var/log/php-fpm.log'
];

foreach ($logFiles as $logFile) {
    if (file_exists($logFile)) {
        echo "<h3>$logFile:</h3>";
        $output = shell_exec("tail -10 $logFile 2>&1");
        echo "<pre>" . htmlspecialchars($output ?: '–ù–µ—Ç –≤—ã–≤–æ–¥–∞') . "</pre>";
        break;
    }
}

echo "</div>
    <div class='section'>
        <h2>8. –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏</h2>";
        
if (!file_exists($wgPath)) {
    echo "<p class='warning'>1. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ WireGuard:</p>";
    echo "<pre>sudo apt update && sudo apt install wireguard</pre>";
}

if (is_dir($configDir) && count(scandir($configDir)) <= 2) {
    echo "<p class='warning'>2. –°–æ–∑–¥–∞–π—Ç–µ —Ç–µ—Å—Ç–æ–≤—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å:</p>";
    echo "<pre>sudo wg genkey | sudo tee /etc/wireguard/wg0.key
sudo wg pubkey < /etc/wireguard/wg0.key | sudo tee /etc/wireguard/wg0.pub
sudo tee /etc/wireguard/wg0.conf > /dev/null <<EOF
[Interface]
PrivateKey = \$(cat /etc/wireguard/wg0.key)
Address = 10.9.0.1/24
ListenPort = 51820
EOF
sudo wg-quick up wg0</pre>";
}

echo "<p>3. –ü–æ—Å–ª–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –æ–±–Ω–æ–≤–∏—Ç–µ —ç—Ç—É —Å—Ç—Ä–∞–Ω–∏—Ü—É</p>";
echo "</div>";

echo "</body></html>";
?>
