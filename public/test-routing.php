<?php
// –í–∫–ª—é—á–∞–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –æ—à–∏–±–æ–∫ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
error_reporting(E_ALL);
ini_set('display_errors', 1);

echo "<h1>üß™ –¢–µ—Å—Ç –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü–∏–∏</h1>";

try {
    // –ó–∞–≥—Ä—É–∂–∞–µ–º –∞–≤—Ç–æ–∑–∞–≥—Ä—É–∑—á–∏–∫
    require_once __DIR__ . '/../vendor/autoload.php';
    echo "‚úÖ Autoload –∑–∞–≥—Ä—É–∂–µ–Ω<br>";

    // –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    $dotenv = Dotenv\Dotenv::createImmutable(__DIR__ . '/..');
    $dotenv->load();
    echo "‚úÖ .env –∑–∞–≥—Ä—É–∂–µ–Ω<br>";

    // –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    $app = new App\Core\Application(__DIR__ . '/..');
    global $app;
    echo "‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ<br>";

    // –°–∏–º—É–ª–∏—Ä—É–µ–º HTTP –∑–∞–ø—Ä–æ—Å –∫ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ
    echo "<h2>–°–∏–º—É–ª—è—Ü–∏—è HTTP –∑–∞–ø—Ä–æ—Å–∞ –∫ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ</h2>";
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ $_SERVER –¥–ª—è —Å–∏–º—É–ª—è—Ü–∏–∏ –∑–∞–ø—Ä–æ—Å–∞
    $_SERVER['REQUEST_METHOD'] = 'GET';
    $_SERVER['REQUEST_URI'] = '/';
    $_SERVER['PATH_INFO'] = '/';
    $_SERVER['QUERY_STRING'] = '';
    
    echo "‚úÖ –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∑–∞–ø—Ä–æ—Å–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã<br>";
    echo "REQUEST_METHOD: " . $_SERVER['REQUEST_METHOD'] . "<br>";
    echo "REQUEST_URI: " . $_SERVER['REQUEST_URI'] . "<br>";
    echo "PATH_INFO: " . $_SERVER['PATH_INFO'] . "<br>";

    // –°–æ–∑–¥–∞–µ–º Request –∏ Response
    $request = new App\Core\Request();
    $response = new App\Core\Response();
    echo "‚úÖ Request –∏ Response —Å–æ–∑–¥–∞–Ω—ã<br>";

    // –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –º–∞—Ä—à—Ä—É—Ç
    $app->router->get('/', [App\Controllers\DashboardController::class, 'index']);
    echo "‚úÖ –ú–∞—Ä—à—Ä—É—Ç –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω<br>";

    // –ü–æ–ª—É—á–∞–µ–º –ø—É—Ç—å –∏–∑ –∑–∞–ø—Ä–æ—Å–∞
    $path = $request->getPath();
    $method = strtolower($request->method());
    echo "‚úÖ –ü—É—Ç—å –∏–∑ –∑–∞–ø—Ä–æ—Å–∞: '$path'<br>";
    echo "‚úÖ –ú–µ—Ç–æ–¥ –∑–∞–ø—Ä–æ—Å–∞: '$method'<br>";

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –º–∞—Ä—à—Ä—É—Ç
    $callback = $app->router->routes[$method][$path] ?? false;
    if ($callback) {
        echo "‚úÖ –ú–∞—Ä—à—Ä—É—Ç –Ω–∞–π–¥–µ–Ω<br>";
    } else {
        echo "‚ùå –ú–∞—Ä—à—Ä—É—Ç –ù–ï –Ω–∞–π–¥–µ–Ω<br>";
        echo "–î–æ—Å—Ç—É–ø–Ω—ã–µ –º–∞—Ä—à—Ä—É—Ç—ã GET:<br>";
        foreach ($app->router->routes['get'] ?? [] as $route => $handler) {
            echo "- $route<br>";
        }
    }

    // –¢–µ—Å—Ç–∏—Ä—É–µ–º resolve()
    echo "<h2>–¢–µ—Å—Ç resolve()</h2>";
    ob_start();
    $result = $app->router->resolve();
    $output = ob_get_clean();
    
    if ($output) {
        echo "‚ö†Ô∏è –ï—Å—Ç—å –≤—ã–≤–æ–¥ –≤ –±—É—Ñ–µ—Ä: " . strlen($output) . " —Å–∏–º–≤–æ–ª–æ–≤<br>";
        echo "<div style='border: 1px solid #ccc; padding: 10px; background: #f9f9f9;'>";
        echo htmlspecialchars(substr($output, 0, 300));
        echo "</div>";
    } else {
        echo "‚úÖ –ë—É—Ñ–µ—Ä –ø—É—Å—Ç–æ–π<br>";
    }
    
    echo "–¢–∏–ø —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ resolve(): " . gettype($result) . "<br>";
    echo "–î–ª–∏–Ω–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ resolve(): " . strlen($result) . " —Å–∏–º–≤–æ–ª–æ–≤<br>";
    
    if (strlen($result) > 0) {
        echo "<h3>–ü–µ—Ä–≤—ã–µ 500 —Å–∏–º–≤–æ–ª–æ–≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ resolve():</h3>";
        echo "<div style='border: 1px solid #ccc; padding: 10px; background: #f9f9f9;'>";
        echo htmlspecialchars(substr($result, 0, 500));
        echo "</div>";
    } else {
        echo "<p style='color: red;'>‚ùå –†–µ–∑—É–ª—å—Ç–∞—Ç resolve() –ø—É—Å—Ç–æ–π!</p>";
    }

    // –¢–µ—Å—Ç–∏—Ä—É–µ–º run()
    echo "<h2>–¢–µ—Å—Ç run()</h2>";
    ob_start();
    $app->run();
    $runOutput = ob_get_clean();
    
    echo "–î–ª–∏–Ω–∞ –≤—ã–≤–æ–¥–∞ run(): " . strlen($runOutput) . " —Å–∏–º–≤–æ–ª–æ–≤<br>";
    
    if (strlen($runOutput) > 0) {
        echo "<h3>–ü–µ—Ä–≤—ã–µ 500 —Å–∏–º–≤–æ–ª–æ–≤ –≤—ã–≤–æ–¥–∞ run():</h3>";
        echo "<div style='border: 1px solid #ccc; padding: 10px; background: #f9f9f9;'>";
        echo htmlspecialchars(substr($runOutput, 0, 500));
        echo "</div>";
    } else {
        echo "<p style='color: red;'>‚ùå –í—ã–≤–æ–¥ run() –ø—É—Å—Ç–æ–π!</p>";
    }

} catch (Throwable $e) {
    echo "<h2>‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏</h2>";
    echo "<p><strong>–û—à–∏–±–∫–∞:</strong> " . htmlspecialchars($e->getMessage()) . "</p>";
    echo "<p><strong>–§–∞–π–ª:</strong> " . htmlspecialchars($e->getFile()) . ":" . $e->getLine() . "</p>";
    echo "<h3>–°—Ç–µ–∫ –≤—ã–∑–æ–≤–æ–≤:</h3>";
    echo "<pre>" . htmlspecialchars($e->getTraceAsString()) . "</pre>";
}

echo "<hr>";
echo "<p><em>–¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω –≤ " . date('Y-m-d H:i:s') . "</em></p>";
?>
