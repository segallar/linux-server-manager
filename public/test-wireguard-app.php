<?php
// –í–∫–ª—é—á–∞–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –æ—à–∏–±–æ–∫
ini_set('display_errors', 1);
ini_set('display_startup_errors', 1);
error_reporting(E_ALL);

echo "<!DOCTYPE html>
<html>
<head>
    <title>WireGuard App Test</title>
    <style>
        body { font-family: Arial, sans-serif; margin: 20px; }
        .success { color: green; font-weight: bold; }
        .error { color: red; font-weight: bold; }
        .warning { color: orange; font-weight: bold; }
        pre { background: #f5f5f5; padding: 10px; border-radius: 5px; overflow-x: auto; }
        .section { margin: 20px 0; padding: 15px; border: 1px solid #ddd; border-radius: 5px; }
    </style>
</head>
<body>
    <h1>üîß WireGuard App Test</h1>";

try {
    // –ü–æ–¥–∫–ª—é—á–∞–µ–º –∞–≤—Ç–æ–∑–∞–≥—Ä—É–∑—á–∏–∫
    require_once __DIR__ . '/../vendor/autoload.php';
    
    echo "<div class='section'>
        <h2>1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ–∑–∞–≥—Ä—É–∑—á–∏–∫–∞</h2>";
    
    if (class_exists('App\Services\WireGuardService')) {
        echo "<p class='success'>‚úÖ –ö–ª–∞—Å—Å WireGuardService –Ω–∞–π–¥–µ–Ω</p>";
    } else {
        echo "<p class='error'>‚ùå –ö–ª–∞—Å—Å WireGuardService –ù–ï –Ω–∞–π–¥–µ–Ω</p>";
        exit;
    }
    
    echo "</div><div class='section'>
        <h2>2. –°–æ–∑–¥–∞–Ω–∏–µ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ —Å–µ—Ä–≤–∏—Å–∞</h2>";
    
    $service = new App\Services\WireGuardService();
    echo "<p class='success'>‚úÖ –≠–∫–∑–µ–º–ø–ª—è—Ä WireGuardService —Å–æ–∑–¥–∞–Ω</p>";
    
    echo "</div><div class='section'>
        <h2>3. –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏</h2>";
    
    $isInstalled = $service->isInstalled();
    echo "<p><strong>isInstalled():</strong> " . ($isInstalled ? '–î–ê' : '–ù–ï–¢') . "</p>";
    
    echo "</div><div class='section'>
        <h2>4. –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤</h2>";
    
    $interfaces = $service->getInterfaces();
    echo "<p><strong>getInterfaces():</strong> " . count($interfaces) . " –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤</p>";
    
    if (!empty($interfaces)) {
        echo "<h3>–î–µ—Ç–∞–ª–∏ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤:</h3>";
        foreach ($interfaces as $interface) {
            echo "<div style='border: 1px solid #ccc; margin: 10px 0; padding: 10px;'>";
            echo "<h4>" . htmlspecialchars($interface['name']) . "</h4>";
            echo "<p><strong>–°—Ç–∞—Ç—É—Å:</strong> " . htmlspecialchars($interface['status']) . "</p>";
            echo "<p><strong>–ê–¥—Ä–µ—Å:</strong> " . htmlspecialchars($interface['address']) . "</p>";
            echo "<p><strong>–ü–æ—Ä—Ç:</strong> " . htmlspecialchars($interface['port']) . "</p>";
            echo "<p><strong>–ü–∏—Ä–æ–≤:</strong> " . count($interface['peers']) . "</p>";
            
            if (!empty($interface['peers'])) {
                echo "<h5>–ü–∏—Ä—ã:</h5>";
                foreach ($interface['peers'] as $peer) {
                    echo "<div style='margin-left: 20px; padding: 5px; background: #f9f9f9;'>";
                    echo "<p><strong>–ö–ª—é—á:</strong> " . substr(htmlspecialchars($peer['public_key']), 0, 20) . "...</p>";
                    echo "<p><strong>–°—Ç–∞—Ç—É—Å:</strong> " . htmlspecialchars($peer['status']) . "</p>";
                    echo "<p><strong>Endpoint:</strong> " . htmlspecialchars($peer['endpoint']) . "</p>";
                    echo "<p><strong>Allowed IPs:</strong> " . implode(', ', $peer['allowed_ips']) . "</p>";
                    echo "</div>";
                }
            }
            echo "</div>";
        }
    }
    
    echo "</div><div class='section'>
        <h2>5. –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏</h2>";
    
    $stats = $service->getStats();
    echo "<h3>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:</h3>";
    echo "<pre>" . print_r($stats, true) . "</pre>";
    
    echo "</div><div class='section'>
        <h2>6. –¢–µ—Å—Ç —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞ —à–∞–±–ª–æ–Ω–∞</h2>";
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —à–∞–±–ª–æ–Ω —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    $templatePath = __DIR__ . '/../templates/tunnels/wireguard.php';
    if (file_exists($templatePath)) {
        echo "<p class='success'>‚úÖ –®–∞–±–ª–æ–Ω wireguard.php –Ω–∞–π–¥–µ–Ω</p>";
        
        // –ü—Ä–æ–±—É–µ–º —Ä–µ–Ω–¥–µ—Ä–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –∫–∞–∫ –≤ –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–µ
        $title = 'WireGuard';
        $currentPage = 'tunnels';
        
        echo "<h3>–î–∞–Ω–Ω—ã–µ –¥–ª—è —à–∞–±–ª–æ–Ω–∞:</h3>";
        echo "<pre>";
        echo "title: $title\n";
        echo "currentPage: $currentPage\n";
        echo "interfaces: " . count($interfaces) . "\n";
        echo "stats: " . json_encode($stats) . "\n";
        echo "isInstalled: " . ($isInstalled ? 'true' : 'false') . "\n";
        echo "</pre>";
        
    } else {
        echo "<p class='error'>‚ùå –®–∞–±–ª–æ–Ω wireguard.php –ù–ï –Ω–∞–π–¥–µ–Ω</p>";
    }
    
} catch (Exception $e) {
    echo "<p class='error'>–û—à–∏–±–∫–∞: " . htmlspecialchars($e->getMessage()) . "</p>";
    echo "<pre>" . htmlspecialchars($e->getTraceAsString()) . "</pre>";
}

echo "</div>
    <div class='section'>
        <h2>7. –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü–∏–∏</h2>";
    
// –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º–∞—Ä—à—Ä—É—Ç –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω
echo "<p>–ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ –º–∞—Ä—à—Ä—É—Ç /tunnels/wireguard –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –≤ public/index.php</p>";
echo "<p>–ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ TunnelController::wireguard() –º–µ—Ç–æ–¥ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç</p>";

echo "</div>";

echo "</body></html>";
?>
