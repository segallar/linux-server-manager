<?php
// –í–∫–ª—é—á–∞–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –æ—à–∏–±–æ–∫
ini_set('display_errors', 1);
ini_set('display_startup_errors', 1);
error_reporting(E_ALL);

echo "<!DOCTYPE html>
<html>
<head>
    <title>Main App Debug</title>
    <style>
        body { font-family: Arial, sans-serif; margin: 20px; }
        .success { color: green; font-weight: bold; }
        .error { color: red; font-weight: bold; }
        .warning { color: orange; font-weight: bold; }
        pre { background: #f5f5f5; padding: 10px; border-radius: 5px; }
        .section { margin: 20px 0; padding: 15px; border: 1px solid #ddd; border-radius: 5px; }
    </style>
</head>
<body>
    <h1>üîß Main App Debug</h1>";

try {
    // –ü–æ–¥–∫–ª—é—á–∞–µ–º –∞–≤—Ç–æ–∑–∞–≥—Ä—É–∑—á–∏–∫
    require_once __DIR__ . '/../vendor/autoload.php';
    
    echo "<div class='section'>
        <h2>1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Å–Ω–æ–≤–Ω—ã—Ö –∫–ª–∞—Å—Å–æ–≤</h2>";
    
    $classes = [
        'App\Core\Application',
        'App\Core\Router',
        'App\Core\Request',
        'App\Core\Response',
        'App\Core\Controller',
        'App\Controllers\TunnelController',
        'App\Services\WireGuardService'
    ];
    
    foreach ($classes as $class) {
        if (class_exists($class)) {
            echo "<p class='success'>‚úÖ $class</p>";
        } else {
            echo "<p class='error'>‚ùå $class</p>";
        }
    }
    
    echo "</div><div class='section'>
        <h2>2. –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è</h2>";
    
    $app = new App\Core\Application(__DIR__ . '/..');
    echo "<p class='success'>‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ</p>";
    
    echo "</div><div class='section'>
        <h2>3. –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –º–∞—Ä—à—Ä—É—Ç–æ–≤</h2>";
    
    // –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –º–∞—Ä—à—Ä—É—Ç—ã –∫–∞–∫ –≤ index.php
    $app->router->get('/', [App\Controllers\DashboardController::class, 'index']);
    $app->router->get('/system', [App\Controllers\SystemController::class, 'index']);
    $app->router->get('/processes', [App\Controllers\ProcessController::class, 'index']);
    $app->router->get('/services', [App\Controllers\ServiceController::class, 'index']);
    $app->router->get('/tunnels/ssh', [App\Controllers\TunnelController::class, 'ssh']);
    $app->router->get('/tunnels/port-forwarding', [App\Controllers\TunnelController::class, 'portForwarding']);
    $app->router->get('/tunnels/wireguard', [App\Controllers\TunnelController::class, 'wireguard']);
    $app->router->get('/tunnels/cloudflare', [App\Controllers\TunnelController::class, 'cloudflare']);
    
    echo "<p class='success'>‚úÖ –ú–∞—Ä—à—Ä—É—Ç—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã</p>";
    
    echo "</div><div class='section'>
        <h2>4. –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–∞—Ä—à—Ä—É—Ç–∞ /tunnels/wireguard</h2>";
    
    // –°–∏–º—É–ª–∏—Ä—É–µ–º –∑–∞–ø—Ä–æ—Å –∫ /tunnels/wireguard
    $_SERVER['REQUEST_URI'] = '/tunnels/wireguard';
    $app = new App\Core\Application(__DIR__ . '/..');
    
    // –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –º–∞—Ä—à—Ä—É—Ç
    $app->router->get('/tunnels/wireguard', [App\Controllers\TunnelController::class, 'wireguard']);
    
    $callback = $app->router->routes['get']['/tunnels/wireguard'] ?? false;
    if ($callback) {
        echo "<p class='success'>‚úÖ –ú–∞—Ä—à—Ä—É—Ç –Ω–∞–π–¥–µ–Ω</p>";
        echo "<pre>";
        print_r($callback);
        echo "</pre>";
        
        echo "<h3>–¢–µ—Å—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞:</h3>";
        try {
            $controller = new $callback[0]();
            $method = $callback[1];
            
            if (method_exists($controller, $method)) {
                echo "<p class='success'>‚úÖ –ú–µ—Ç–æ–¥ $method —Å—É—â–µ—Å—Ç–≤—É–µ—Ç</p>";
                
                // –ü—Ä–æ–±—É–µ–º –≤—ã–ø–æ–ª–Ω–∏—Ç—å –º–µ—Ç–æ–¥
                $result = $controller->$method();
                echo "<p class='success'>‚úÖ –ú–µ—Ç–æ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ</p>";
                echo "<h4>–†–µ–∑—É–ª—å—Ç–∞—Ç:</h4>";
                echo "<pre>" . htmlspecialchars($result) . "</pre>";
                
            } else {
                echo "<p class='error'>‚ùå –ú–µ—Ç–æ–¥ $method –ù–ï —Å—É—â–µ—Å—Ç–≤—É–µ—Ç</p>";
            }
            
        } catch (Exception $e) {
            echo "<p class='error'>‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞: " . htmlspecialchars($e->getMessage()) . "</p>";
            echo "<pre>" . htmlspecialchars($e->getTraceAsString()) . "</pre>";
        }
        
    } else {
        echo "<p class='error'>‚ùå –ú–∞—Ä—à—Ä—É—Ç –ù–ï –Ω–∞–π–¥–µ–Ω</p>";
    }
    
    echo "</div><div class='section'>
        <h2>5. –ü—Ä–æ–≤–µ—Ä–∫–∞ WireGuard —Å–µ—Ä–≤–∏—Å–∞</h2>";
    
    try {
        $service = new App\Services\WireGuardService();
        echo "<p class='success'>‚úÖ WireGuardService —Å–æ–∑–¥–∞–Ω</p>";
        
        $interfaces = $service->getInterfaces();
        echo "<p><strong>–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤:</strong> " . count($interfaces) . "</p>";
        
        $stats = $service->getStats();
        echo "<p><strong>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:</strong></p>";
        echo "<pre>" . print_r($stats, true) . "</pre>";
        
    } catch (Exception $e) {
        echo "<p class='error'>‚ùå –û—à–∏–±–∫–∞ WireGuardService: " . htmlspecialchars($e->getMessage()) . "</p>";
    }
    
} catch (Exception $e) {
    echo "<p class='error'>–û—à–∏–±–∫–∞: " . htmlspecialchars($e->getMessage()) . "</p>";
    echo "<pre>" . htmlspecialchars($e->getTraceAsString()) . "</pre>";
}

echo "</div>";

echo "</body></html>";
?>
