<?php
// –í–∫–ª—é—á–∞–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –æ—à–∏–±–æ–∫
ini_set('display_errors', 1);
ini_set('display_startup_errors', 1);
error_reporting(E_ALL);

echo "<!DOCTYPE html>
<html>
<head>
    <title>WireGuard Template Debug</title>
    <style>
        body { font-family: Arial, sans-serif; margin: 20px; }
        .success { color: green; font-weight: bold; }
        .error { color: red; font-weight: bold; }
        .warning { color: orange; font-weight: bold; }
        pre { background: #f5f5f5; padding: 10px; border-radius: 5px; overflow-x: auto; }
        .section { margin: 20px 0; padding: 15px; border: 1px solid #ddd; border-radius: 5px; }
    </style>
</head>
<body>
    <h1>üîß WireGuard Template Debug</h1>";

try {
    // –ü–æ–¥–∫–ª—é—á–∞–µ–º –∞–≤—Ç–æ–∑–∞–≥—Ä—É–∑—á–∏–∫
    require_once __DIR__ . '/../vendor/autoload.php';
    
    echo "<div class='section'>
        <h2>1. –°–∏–º—É–ª—è—Ü–∏—è –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞</h2>";
    
    // –°–∏–º—É–ª–∏—Ä—É–µ–º —Ä–∞–±–æ—Ç—É –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞
    $wireguardService = new App\Services\WireGuardService();
    
    $interfaces = $wireguardService->getInterfaces();
    $stats = $wireguardService->getStats();
    $isInstalled = $wireguardService->isInstalled();
    
    echo "<p class='success'>‚úÖ –î–∞–Ω–Ω—ã–µ –ø–æ–ª—É—á–µ–Ω—ã –∏–∑ —Å–µ—Ä–≤–∏—Å–∞</p>";
    
    echo "</div><div class='section'>
        <h2>2. –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è —à–∞–±–ª–æ–Ω–∞</h2>";
    
    echo "<h3>isInstalled:</h3>";
    echo "<pre>" . var_export($isInstalled, true) . "</pre>";
    
    echo "<h3>stats:</h3>";
    echo "<pre>" . print_r($stats, true) . "</pre>";
    
    echo "<h3>interfaces:</h3>";
    echo "<pre>" . print_r($interfaces, true) . "</pre>";
    
    echo "</div><div class='section'>
        <h2>3. –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å–ª–æ–≤–∏–π –≤ —à–∞–±–ª–æ–Ω–µ</h2>";
    
    echo "<p><strong>!isInstalled:</strong> " . (!$isInstalled ? 'true' : 'false') . "</p>";
    echo "<p><strong>empty(interfaces):</strong> " . (empty($interfaces) ? 'true' : 'false') . "</p>";
    echo "<p><strong>count(interfaces):</strong> " . count($interfaces) . "</p>";
    
    if (!empty($interfaces)) {
        echo "<h3>–ü–µ—Ä–≤—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å:</h3>";
        $firstInterface = $interfaces[0];
        echo "<p><strong>name:</strong> " . htmlspecialchars($firstInterface['name']) . "</p>";
        echo "<p><strong>status:</strong> " . htmlspecialchars($firstInterface['status']) . "</p>";
        echo "<p><strong>address:</strong> " . htmlspecialchars($firstInterface['address']) . "</p>";
        echo "<p><strong>port:</strong> " . htmlspecialchars($firstInterface['port']) . "</p>";
        echo "<p><strong>peers count:</strong> " . count($firstInterface['peers']) . "</p>";
    }
    
    echo "</div><div class='section'>
        <h2>4. –¢–µ—Å—Ç —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞ —à–∞–±–ª–æ–Ω–∞</h2>";
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —à–∞–±–ª–æ–Ω —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    $templatePath = __DIR__ . '/../templates/tunnels/wireguard.php';
    if (file_exists($templatePath)) {
        echo "<p class='success'>‚úÖ –®–∞–±–ª–æ–Ω wireguard.php –Ω–∞–π–¥–µ–Ω</p>";
        
        // –ü—Ä–æ–±—É–µ–º –≤–∫–ª—é—á–∏—Ç—å —à–∞–±–ª–æ–Ω –Ω–∞–ø—Ä—è–º—É—é
        echo "<h3>–†–µ–Ω–¥–µ—Ä–∏–Ω–≥ —à–∞–±–ª–æ–Ω–∞:</h3>";
        echo "<div style='border: 2px solid #ccc; padding: 20px; margin: 10px 0;'>";
        
        // –í–∫–ª—é—á–∞–µ–º —à–∞–±–ª–æ–Ω —Å –Ω–∞—à–∏–º–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º–∏
        include $templatePath;
        
        echo "</div>";
        
    } else {
        echo "<p class='error'>‚ùå –®–∞–±–ª–æ–Ω wireguard.php –ù–ï –Ω–∞–π–¥–µ–Ω</p>";
    }
    
} catch (Exception $e) {
    echo "<p class='error'>–û—à–∏–±–∫–∞: " . htmlspecialchars($e->getMessage()) . "</p>";
    echo "<pre>" . htmlspecialchars($e->getTraceAsString()) . "</pre>";
}

echo "</div>";

echo "</body></html>";
?>
