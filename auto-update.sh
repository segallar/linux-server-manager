#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è Linux Server Manager
# –ó–∞–ø—É—Å–∫–∞–µ—Ç—Å—è —á–µ—Ä–µ–∑ cron –∏ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç —Ñ–ª–∞–≥ –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–∫–∏

echo "ü§ñ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ Linux Server Manager"
echo "================================================"

WEB_ROOT="/var/www/html/linux-server-manager"
FLAG_FILE="$WEB_ROOT/.pause-auto-update"
LOG_FILE="$WEB_ROOT/logs/auto-update.log"
LOCK_FILE="$WEB_ROOT/.auto-update.lock"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å–∫—Ä–∏–ø—Ç –∑–∞–ø—É—â–µ–Ω —Å –ø—Ä–∞–≤–∞–º–∏ root
if [ "$EUID" -ne 0 ]; then
    echo "‚ùå –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∑–∞–ø—É—â–µ–Ω —Å –ø—Ä–∞–≤–∞–º–∏ root (sudo)"
    exit 1
fi

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
log_message() {
    local message="$1"
    local timestamp=$(date '+%Y-%m-%d %H:%M:%S')
    echo "[$timestamp] $message" | tee -a "$LOG_FILE"
}

# –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è –ª–æ–≥–æ–≤
mkdir -p "$(dirname "$LOG_FILE")"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–ª–æ–∫–∏—Ä–æ–≤–∫—É (–ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –∑–∞–ø—É—Å–∫–∏)
if [ -f "$LOCK_FILE" ]; then
    PID=$(cat "$LOCK_FILE" 2>/dev/null)
    if [ -n "$PID" ] && kill -0 "$PID" 2>/dev/null; then
        log_message "‚ö†Ô∏è –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —É–∂–µ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è (PID: $PID)"
        exit 1
    else
        log_message "üßπ –£–¥–∞–ª—è–µ–º —É—Å—Ç–∞—Ä–µ–≤—à–∏–π lock —Ñ–∞–π–ª"
        rm -f "$LOCK_FILE"
    fi
fi

# –°–æ–∑–¥–∞–µ–º lock —Ñ–∞–π–ª
echo $$ > "$LOCK_FILE"

# –§—É–Ω–∫—Ü–∏—è –æ—á–∏—Å—Ç–∫–∏ –ø—Ä–∏ –≤—ã—Ö–æ–¥–µ
cleanup() {
    rm -f "$LOCK_FILE"
    exit 0
}

trap cleanup EXIT INT TERM

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–ª–∞–≥ –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–∫–∏
if [ -f "$FLAG_FILE" ]; then
    log_message "‚è∏Ô∏è –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ (—Ñ–ª–∞–≥: $FLAG_FILE)"
    log_message "üí° –î–ª—è –≤–æ–∑–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —É–¥–∞–ª–∏—Ç–µ —Ñ–∞–π–ª: rm $FLAG_FILE"
    exit 0
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
if [ ! -d "$WEB_ROOT" ]; then
    log_message "‚ùå –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è $WEB_ROOT –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
    exit 1
fi

cd "$WEB_ROOT"

log_message "üìÅ –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é: $(pwd)"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â—É—é –≤–µ—Ä—Å–∏—é
CURRENT_VERSION=$(git describe --tags --always 2>/dev/null || echo "unknown")
log_message "üè∑Ô∏è –¢–µ–∫—É—â–∞—è –≤–µ—Ä—Å–∏—è: $CURRENT_VERSION"

# –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è
log_message "üì• –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è..."
git fetch origin

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
if [ "$(git log HEAD..origin/main --oneline | wc -l)" -eq 0 ]; then
    log_message "‚ÑπÔ∏è –û–±–Ω–æ–≤–ª–µ–Ω–∏–π –Ω–µ—Ç"
    exit 0
fi

# –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
log_message "üîÑ –î–æ—Å—Ç—É–ø–Ω—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è:"
git log HEAD..origin/main --oneline | while read line; do
    log_message "   $line"
done

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ª–æ–∫–∞–ª—å–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è
if [ -n "$(git status --porcelain)" ]; then
    log_message "üíæ –°–æ—Ö—Ä–∞–Ω—è–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è..."
    git stash push -m "Auto-stash before update $(date)"
fi

# –í—ã–ø–æ–ª–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
log_message "üîÑ –í—ã–ø–æ–ª–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ..."
if git reset --hard origin/main; then
    log_message "‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–¥–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ"
else
    log_message "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –∫–æ–¥–∞"
    exit 1
fi

# –û–±–Ω–æ–≤–ª—è–µ–º Composer
log_message "üì¶ –û–±–Ω–æ–≤–ª—è–µ–º Composer..."
if [ -f "composer.json" ]; then
    if composer dump-autoload --no-dev; then
        log_message "‚úÖ Composer –æ–±–Ω–æ–≤–ª–µ–Ω"
    else
        log_message "‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ Composer"
    fi
else
    log_message "‚ö†Ô∏è composer.json –Ω–µ –Ω–∞–π–¥–µ–Ω"
fi

# –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –∫—ç—à–∞
log_message "üóÑÔ∏è –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –∫—ç—à–∞..."
if [ ! -d "cache" ]; then
    mkdir -p cache
    chown www-data:www-data cache
    chmod 755 cache
    log_message "‚úÖ –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –∫—ç—à–∞ —Å–æ–∑–¥–∞–Ω–∞"
else
    log_message "‚ÑπÔ∏è –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –∫—ç—à–∞ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
fi

# –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–ø—Ç—ã –∏—Å–ø–æ–ª–Ω—è–µ–º—ã–º–∏
log_message "üîß –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–∞–≤–∞ –Ω–∞ —Å–∫—Ä–∏–ø—Ç—ã..."
chmod +x *.sh 2>/dev/null

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–æ–≤—É—é –≤–µ—Ä—Å–∏—é
NEW_VERSION=$(git describe --tags --always 2>/dev/null || echo "unknown")
log_message "üè∑Ô∏è –ù–æ–≤–∞—è –≤–µ—Ä—Å–∏—è: $NEW_VERSION"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
log_message "üåê –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..."
HTTP_CODE=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:81/ 2>/dev/null || echo "000")
if [ "$HTTP_CODE" = "200" ]; then
    log_message "‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω–æ (HTTP $HTTP_CODE)"
else
    log_message "‚ö†Ô∏è –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ (HTTP $HTTP_CODE)"
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–µ—Ä—Å–∏—é –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏
VERSION_IN_APP=$(curl -s http://localhost:81/ 2>/dev/null | grep -o "v[0-9]\+\.[0-9]\+\.[0-9]\+" | head -1 || echo "")
if [ -n "$VERSION_IN_APP" ]; then
    log_message "‚úÖ –í–µ—Ä—Å–∏—è –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏: $VERSION_IN_APP"
else
    log_message "‚ö†Ô∏è –í–µ—Ä—Å–∏—è –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
fi

log_message "üéØ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!"

# –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
if [ -n "$VERSION_IN_APP" ] && [ "$VERSION_IN_APP" != "$CURRENT_VERSION" ]; then
    log_message "üéâ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å $CURRENT_VERSION –¥–æ $VERSION_IN_APP –≤—ã–ø–æ–ª–Ω–µ–Ω–æ!"
fi
